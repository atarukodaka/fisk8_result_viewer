// locals: competition, category, segment, category_summaries
//   optional: results (only when 'category' specified)
/              segment_scores (only when 'segment' specified)

- content_for :title do
  | competition: 
  = [competition.name, category, segment].reject(&:blank?).join(' / ')

- case result_type
- when :category
  - breadcrumb :competition_category, competition, category
- when :segment
  - breadcrumb :competition_segment, competition, category, segment
- else
  - breadcrumb :competition, competition

////////////////////////////////////////////////////////////////
.row
  .col-sm-6
    h2= t(".competition_summary", default: "Competition Summary")
    = Listtable.new(self).records(competition.decorate).columns([:name_info, :location, :site_url, :period, :comment]).render
    
  .col-sm-6
    h2= t(".performed_segment", default: "Performed Segment")
    = AjaxDatatables::Datatable.new(self).records(competition.performed_segments.order(:id)).columns([:category, :segment, :starting_time]).update_settings(paging: false, info: false, searching: false).decorate.render

////////////////////////////////////////////////////////////////
h2
  - case result_type
  /- when :none
  /  ="#{t('field.category', default: 'Category')} / #{t('field.segment', default: 'Segment')}"
  - when :category
    | #{t(".category_results", default: "Category Results")} : #{category}
  - when :segment
    | #{t(".segment_results", default: "Segment Results")} : #{category}/#{segment}

////////////////
// nav bar for category/segment
//.nav
  ul.nav.nav-tabs
    - competition.scores.recent.pluck(:category).uniq.each do |c|
      - category_active = (category == c) ? "active" : ""
      li class="#{category_active}"
        =link_to_competition(competition, category: c)

  ul.nav.nav-tabs
    /- competition.scores.where(category: category).pluck(:segment).uniq.each do |s|
    - competition.scores.where(category: category).recent.reverse.pluck(:segment).uniq.each do |s|
      - segment_active = (segment == s) ? "active" : ""
      li class="#{segment_active}"
        = link_to_competition(competition, category: category, segment: s)

////////////////////////////////////////////////////////////////

/- if result_type != :none
  = results.update_settings(paging: false, info: false).decorate.render
- case result_type
  - when :category
    = category_results.update_settings(paging: false, info: false).decorate.render
  - when :segment
    = segment_results.update_settings(paging: false, info: false).decorate.render
