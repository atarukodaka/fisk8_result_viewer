// locals: keys, collection, optional: filter_keys, record_callback

- keys ||= []
//- keys = collection.class.display_keys
- record_callback ||= {}
- filter_keys ||= []

table.table.table-striped.table-hover.table-condensed.list-table
  tr
    - keys.each do |key|
      - if record_callback[key].blank? and filter_keys.include?(key)
        th= bracket(key.to_s.camelize)
      - else
        th= key.to_s.camelize
    - collection.each do |item|
      tr
        - keys.each do |key|
          td= item.method(key).call
//          - if cb = controller.registered_list_record_callback(key)
            //cb = record_callback[key]
//            td= cb.call(item, key)
//          - elsif filter_keys.include?(key)
//            td= link_to_index(item[key], parameters: params.permit(filter_keys).merge(key => item[key]))
//          - else


= paginate(collection) if collection.respond_to?(:total_pages)
