- datatable || raise('no table given')

- table_id = datatable.table_id
- column_names = datatable.column_names
- numbering ||= false

- settings = datatable.settings
/- deferLoading = datatable.records.model.count

script
  | jQuery(function($){
  | var t = $("##{table_id}").DataTable(
  /= datatable.table_settings.to_json.html_safe
  | {
  - if dl = settings[:deferLoading].presence
    - datatable.data = datatable.data.limit(settings[:pageLength] || 10).decorate
    |   deferLoading: #{settings[:deferLoading]},
  - [:paging, :pageLength, :info, :pagingType, :lengthChange, :serverSide].each do |key|
    - next unless settings.has_key?(key)
    |  #{key}: #{settings[key].to_json.html_safe},
  - if settings[:ajax].present?
    |  ajax: { 
    |    url: "#{settings[:ajax][:url]}",
    |    data: function(d){ 
    |      d.name_operator = $('#name_operator').val(),
    |      d.goe_operator = $('#goe_operator').val(),
    |      d.value_operator = $('#value_operator').val()
    |    }
    |  },
  |  columns: [
  -    datatable.column_names.each do |column_name|
    |    { 
    |        data: "#{column_name}",
    |        visible: #{ (datatable.hidden_columns.index(column_name.to_sym)) ? false : true },
    |        orderable: #{ (datatable.orderable_columns.index(column_name.to_sym)) ? true : false },
    |        searchable: #{ (datatable.searchable_columns.index(column_name.to_sym)) ? true : false },
    |    },
  |  ],
      order: #{datatable.order.to_json.html_safe}
  | } 


  | );

  - if datatable.numbering
    | var numbering_column = #{datatable.column_names.index(datatable.numbering.to_s) || 0};
    | t.on('order.dt search.dt', function(){
    |     t.column(numbering_column, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
    |         cell.innerHTML = i+1;
    |     } );
    |  } );
    - unless datatable.settings[:serverSide]
      | t.draw();



  | });


table.table.table-striped.table-hover.table-condensed id="#{table_id}"
  thead
    tr
      - column_names.each do |key|
        th= key.to_s.humanize
  tbody
    /- unless datatable.settings[:ajax] 
    - unless datatable.settings[:ajax] && settings[:deferLoading].blank?
      - datatable.data.each do |item|
        tr
          - column_names.each do |key|
            td
              - if item.respond_to? key
                = item.send(key)
              - else
                = item[:key]



