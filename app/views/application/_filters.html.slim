//- datatable || raise('no table given')
//- filters = datatable.class.filters
//- filters = "#{datatable.class}::Filters".try(:constantize).try(:new) || []
- filters.datatable || raise
////////////////////////////////////////////////////////////////
// filter

- if filters.present?
  = button_tag(t("filter.toggle_filter", default: "show/hide filters"), onclick: "$('#filter_form').toggle();", id: "toggle_filteres")
  = form_tag url_for(controller: controller_name, action: :index), method: :get, enforce_utf8: false, id: :filter_form do |f|  

    - filters.each do |filter|
      div.form-group.row
        div.col-sm-2
          label= filters.datatable.model.human_attribute_name(filter.key)
        div.col-sm-10
          = render partial: "filter", locals: { filter: filter, datatable: filters.datatable }

    = form_group do
      label= t("filter.offset", default: "Offset")
      =text_field_tag(:offset, params[:offset], label: "AAA")
      label
      // = button_tag("html", type: "submit", name: "format", value: "html", onclick: "location.href='#{url_for(action: :index, format: :json).html_safe}'")
      label
      = button_tag("json", type: "submit", name: "format", value: "json", onclick: "location.href='#{url_for(action: :index, format: :json).html_safe}'")
      label
      = button_tag("csv", type: "submit", name: "format", value: "csv", onclick: "location.href='#{url_for(action: :index, format: :csv).html_safe}'")
    // = form_group(nil) do
      = submit_tag("Search", id: "submit", name: nil)
      label with format of
      = select_tag(:format, options_for_select(['html', 'json', 'csv'], selected: params[:format]))
