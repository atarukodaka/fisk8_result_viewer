- content_for :title do
  | score: #{score.name}

- breadcrumb :score, score

.row
  .col-sm-6
    h2= t(".score_summary", default: "Score Summary")
    = Listtable.new(self).records(score.decorate).columns([:skater_name, :competition_name, :category_name, :segment_name, :date, :tss, :tes, :pcs, :deductions, :result_pdf]).render
  .col-sm-6

    h2= t(".relevant_video", default: "Relevant Video")
    - query = "#{score.skater.name} #{score.competition.name} #{score.segment.name}"
    - api_key = Settings[:youtube][:api_key]
    - if api_key.blank?
      div set ENV['YOUTUBE_API_KEY'] to search youtube videos.
    - elsif video = parse_youtube(query, api_key: api_key)
        iframe id="ytplayer" src="https://www.youtube.com/embed/#{video[:id]}" width=640 height=360 allowfullscreen=true
        ul
          li= "query: #{query}"
          li= "title: #{video[:title]}"
          li= "date: #{video[:published_at]}"
    - else
      div No relevant videos found
    div= link_to(t(".see_other_relevant_videos", default: "see other relevant videos"), "http://www.youtube.com/results?q=#{query}", target: '_blank')

h2= t(".elements", default: "Elements")

= elements.decorate.render

h2= t(".components", default: "Components")

= components.decorate.render

h2= t("view.score.deductions", default: "Deductions")
= score.deduction_reasons || 'n/a'


