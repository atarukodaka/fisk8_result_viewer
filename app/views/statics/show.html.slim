- category = params[:category]
- season = params[:season]

h3 Highest  Score
.row
  - cols = [:skater_name, :nation, :name, :tss, :tes, :pcs]
  - records = Score.includes(:competition, :skater).order(tss: :desc).where("competitions.season" => season, category: category)
  .col-sm-6
    h4 Short
    = StaticsDatatable.new(self).records(records.short).columns(cols).decorate.render
     
  .col-sm-6
    h4 Free
    = StaticsDatatable.new(self).records(records.free).columns(cols).decorate.render

h3 Most Valuable Elements

.row
  - records = Element.includes(:score, score: [:competition, :skater]).where("competitions.season" => season, "scores.category" => category).order(value: :desc).references(:score, score: [:competition])
  - cols = [:skater_name, :score_name, :name, :base_value, :goe, :value]
  .col-sm-6
    h4 Jump
    = StaticsDatatable.new(self).records(records.where(element_type: :jump)).columns(cols).decorate.render
  .col-sm-6
    h4 Spin
    = StaticsDatatable.new(self).records(records.where(element_type: :spin)).columns(cols).decorate.render

.row
  .col-sm-4
    h4 Step
    = StaticsDatatable.new(self).records(records.where(element_type: :step)).columns(cols).decorate.render

