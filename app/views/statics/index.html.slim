- season || category || datatables || raise

= form_tag statics_path, method: :get, enforce_utf8: false, id: :statics_form do |f|
  = form_group(Competition.human_attribute_name(:season), select_tag_with_options(:season, selected: season, onchange:"$('#statics_form').submit()"))
  = form_group(Score.human_attribute_name(:category), select_tag_with_options(:category_type, onchange: "$('#statics_form').submit()"))
  = form_group(nil, button_tag("REFRESH", type: :submit))

////////////////////////////////////////////////////////////////
h3= t(".highest_score", default: "Highest  Score")

h4= t(".total_score", default: "Total Score")
.row
  .col-sm-12
    = datatables[:scores][:total].render

.row
  - [:short, :free].each do |key|
    .col-sm-6
      h4= t(".#{key}", default: key.to_s.camelize)
    = datatables[:scores][key].render

////////////////
h3= t(".most_valuable_elements", default:  "Most Valuable Elements")
- records = Element.includes(:score, score: [:competition, :skater]).where("competitions.season" => season, "scores.category" => category).order(value: :desc).joins(:score, score: [:competition])
.row
  - cols = [:no, :skater_name, :score_name, :name, :base_value, :goe, :value]
  - [:jump, :spin].each do |key|
    .col-sm-6
      h4= t(".#{key}", default: key.to_s.camelize)
      = datatables[:valuable_elements][key].render
.row
  - [:step, :choreo].each do |key|
    .col-sm-6
      h4= t(".#{key}", default: key.to_s.camelize)
      = datatables[:valuable_elements][key].render

.row
  - [:lift, :death_spiral].each do |key|
    .col-sm-6
      h4= t(".#{key}", default: key.to_s.camelize)
      = datatables[:valuable_elements][key].render

- if category =~ /ICE DANCE/
  .row
    .col-sm-6
      h4= t(".twizzle", default:  "Twizzle")
      = StaticsDatatable.new(self).records(records.where(element_type: :twizzlel)).columns(cols).decorate.render

    .col-sm-6
      h4= t(".pattern_dance", default: "Pattern Dance")
      = StaticsDatatable.new(self).records(records.where(element_type: :pattern_dancel)).columns(cols).decorate.render

h3 PCS

.row
  - [:short, :free].each do |key|
    .col-sm-6
      h4= t(".#{key}", default: key.to_s.camelize)
      = datatables[:pcs][key].render
