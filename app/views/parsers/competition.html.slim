- parser_type ||= :isu_generic
- competition_parser = Parsers.parser(:competition, parser_type)
- summary = competition_parser.parse(url)

- breadcrumb :parser_competition

h2 Competition

ul
  - [:name, :short_name, :site_url, :city, :country, :competition_type, :start_date, :end_date, :comment].each do |k|
    li= [k, summary[k]].join(': ')

h3 Table of Index
ul
  - summary[:categories].each do |category, cat_item|
    li= link_to(category, "##{category}")
    - summary[:segments][category].each do |segment, seg_item|
      ul
        li= link_to(segment, "##{category}-#{segment}")

- summary[:categories].each do |category, cat_item|
  - category_url = cat_item[:result_url]
  h3 id="#{category}"
    = category

  ul
    - result_parser = Parsers.parser(:category_result, parser_type)
    - result_parser.parse(category_url).each do |result|
      li= "%<ranking>d: %<skater_name>s [%<nation>s]: %<points>.2f: %<short_ranking>d / %<free_ranking>d" % result

  - summary[:segments][category].each do |segment, seg_item|
    h4 id="#{category}-#{segment}"
      = "Scores: " + [category, segment].join('/')
    - score_parser = Parser::ScoreParser.new
    - scores = score_parser.parse(seg_item[:score_url])
    = render template: "parsers/scores", locals: { scores: scores }
  
