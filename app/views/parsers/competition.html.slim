- parser_type ||= :isu_generic
- competition_parser = Parsers.parser(:competition, parser_type)
- summary = Adaptor::CompetitionAdaptor.new(competition_parser.parse(url))

h2 Competition

ul
  - [:name, :short_name, :site_url, :city, :country, :competition_type, :start_date, :end_date, :comment].each do |k|
    li= [k, summary[k]].join(': ')

h3 Table of Index
ul
  - summary.categories.each do |category|
    li= link_to(category, "##{category}")
    - summary.segments(category).each do |segment|
      ul
        li= link_to(segment, "##{category}-#{segment}")

- summary.categories.each do |category|
  - category_url = summary.result_url(category)
  h3 id="#{category}"
    = category

  ul
    - result_parser = Parsers.parser(:category_result, parser_type)
    - result_parser.parse(category_url).each do |result|
      li= "%<ranking>d: %<skater_name>s [%<nation>s]: %<points>.2f: %<short_ranking>d / %<free_ranking>d" % result

  - summary.segments(category).each do |segment|
    h4 id="#{category}-#{segment}"
      = "Scores: " + [category, segment].join('/')
    - score_url = summary.score_url(category, segment)
    - score_parser = Parser::ScoreParser.new
    - scores = score_parser.parse(score_url)
    = render template: "parsers/scores", locals: { scores: scores }
  
