- season || category || events || points_by_skaters || raise

style
  | .done { font-weight: bold; }
  | .qualified { background-color: #ffeeee; }
  | .dnq {}

h2 Grand Prix Series

= form_tag grandprixes_path, method: :get, enforce_utf8: false, id: :grandprixes_form do |f|
  = form_group(:season, text_field_tag(:season, season.to_s))
  /= form_group(Competition.human_attribute_name(:season), select_tag_with_options(:season, selected: season)
  = form_group(:category, select_tag_with_options(:category_name))
  = form_group(:simulation_times, text_field_tag(:simulation_times, simulation_parameters[:times], size: 30))
  = form_group(:stddev_ratio, text_field_tag(:stddev_ratio, simulation_parameters[:stddev_ratio], size: 30))
  = form_group(nil, submit_tag(:submit))
hr

h3 Results
table.table.table-hover.table-condensed
  thead
    tr
      th Ranking
      th Skater Name
      - events.each do |event|
        th= "GP#{event[:name].upcase}"
      th Total
      th Probability to Qualify

  tbody
    - results.sort_by {|_s, d| d[:probability_to_qualify]}.reverse.each.with_index(1) do |(skater, hash), ranking|
      - klass = (ranking <= 6) ? :qualified : :dnq
      tr class="#{klass}"
        td= ranking
        td= link_to_skater(skater)
        - hash[:points].each.with_index do |point, i|
          - event = events[i]
          - if event.done?
            td.done="%.2f" % [ point ]
          - elsif hash[:participated][i]
            td= "%.2f" % [ point ]
          - else
            td -
        td= "%.2f" % [ hash[:points].sum ]
        td= "%.2f%" % [ hash[:probability_to_qualify].to_f * 100 ]
